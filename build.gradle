// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'javax.mail:mail:1.5.0-b01'

    // Use JUnit test framework.
    testCompile 'junit:junit:4.12'
}

// Define the main class for the application
mainClassName = 'com.github.friedrichfroebel.occar.Gui'

// Default build does not include the needed libraries.
// Therefore the jar option should be used for releases.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest {
        attributes (
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': mainClassName
        )
    }
}

// Check code style.
apply plugin: 'checkstyle'
checkstyle {
    // Use the latest release.
    toolVersion "7.8"
}
tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet resources.text.fromFile('config/checkstyle/checkstyle.xsl')
    }
}

task wrapper(type: Wrapper) {
    gradleVersion '3.5'
}
